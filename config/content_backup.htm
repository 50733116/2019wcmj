<h1>讚</h1>
<p><span>學習如何一次上傳多個圖檔, 並且學會如何引用, 並且設定圖片大小。</span></p>
<p><img alt="" height="103" src="/images/gocycle4.png" width="128"/></p>
<p><img alt="" height="386" src="/images/擷取.PNG" width="555"/></p><h2>讚讚</h2>
<p> </p>
<script type="text/javascript">
var cwidth = 400;
    var cheight = 300;
    var dicex = 50;
    var dicey = 50;
    var dicewidth = 100;
    var diceheight = 100;
    var dotrad = 6;
    var ctx;
    var dx;
    var dy;
    var firstturn = true;
    var point;
function throwdice() {
    var sum;
    var ch = 1+Math.floor(Math.random()*6);
    sum = ch;
    dx = dicex;
    dy = dicey;
    drawface(ch);
    dx = dicex + 150;
    ch=1 + Math.floor(Math.random()*6);
    sum += ch;
    drawface(ch);
    if (firstturn) {
        switch(sum) {
            case 7:
            case 11:
              document.f.outcome.value="You win!";
              break;
            case 2:
            case 3:
            case 12:
              document.f.outcome.value="You lose!";
              break;
            default:
              point = sum;
              document.f.pv.value=point;
              firstturn = false;
              document.f.stage.value="Need follow-up throw.";
              document.f.outcome.value="   ";
        }
    }
    else {
        switch(sum) {
        case point:
           document.f.outcome.value="You win!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
           break;
        case 7:
           document.f.outcome.value="You lose!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
        }
            }
}
function drawface(n) {
  ctx = document.getElementById('canvas').getContext('2d');  
  ctx.lineWidth = 5;
  ctx.clearRect(dx,dy,dicewidth,diceheight);
  ctx.strokeRect(dx,dy,dicewidth,diceheight)
  var dotx;
  var doty;
  ctx.fillStyle = "#009966";
    switch(n) {
        case 1:
         draw1();
         break;
        case 2:
         draw2();
         break;
        case 3:
         draw2();
         draw1();
         break;
        case 4:
         draw4();
         break;
        case 5:
         draw4();
         draw1();
         break;
        case 6:
         draw4();
         draw2mid();
         break;
         
    }
}
function draw1() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + .5*dicewidth;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw2() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw4() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + diceheight-3*dotrad;  //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+ 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill(); 
}
function draw2mid() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy + .5*diceheight; //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
</script>
<p><canvas height="300" id="canvas" width="400"> Your browser doesn't support the HTML5 element canvas. </canvas> <br/> <button onclick="throwdice();">Throw dice </button></p>
<form id="f" name="f">Stage: <input name="stage" type="text" value="First Throw"/> Point: <input name="pv" type="text" value="   "/> Outcome: <input name="outcome" type="text" value="     "/></form><h3>讚讚讚</h3>
<p></p>
<p style="text-align: center;"><img alt="cool" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-cool.gif"/><img alt="cry" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-cry.gif"/><img alt="embarassed" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-embarassed.gif"/><img alt="foot-in-mouth" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-foot-in-mouth.gif"/><img alt="frown" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-frown.gif"/><img alt="innocent" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-innocent.gif"/><img alt="kiss" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-kiss.gif"/><img alt="laughing" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-laughing.gif"/><img alt="money-mouth" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-money-mouth.gif"/><img alt="sealed" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-sealed.gif"/><img alt="smile" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-smile.gif"/><img alt="surprised" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-surprised.gif"/><img alt="tongue-out" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-tongue-out.gif"/><img alt="undecided" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-undecided.gif"/><img alt="wink" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-wink.gif"/><img alt="yell" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-yell.gif"/><img alt="cry" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-cry.gif"/><img alt="money-mouth" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-money-mouth.gif"/><img alt="frown" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-frown.gif"/><img alt="cool" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-cool.gif"/><img alt="embarassed" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-embarassed.gif"/><img alt="tongue-out" src="/static/tinymce4/tinymce/plugins/emoticons/img/smiley-tongue-out.gif"/></p>
<p><span color="#FF0000" style="color: orange;">按一下，即可發大財</span></p>
<p><button onclick="myFunction()"><img height="166" src="https://s.yimg.com/ny/api/res/1.2/OFA38X4sK_OTqe9LBSRXYA--~A/YXBwaWQ9aGlnaGxhbmRlcjtzbT0xO3c9ODAw/http://media.zenfs.com/zh-Hant-TW/homerun/fountmedia_io_269/86d27f43b0f1df1a3f134ddb6f30e843" width="251"/></button></p>
<p id="demo"></p>
<p><span color="#FF0000" style="color: #ff0000;">恭喜獲得以上金額</span></p>
<script>
function myFunction() {
  document.getElementById("demo").innerHTML = Math.floor(Math.random()*1000000000000000+1);
}
</script>
<p><marquee direction="left">發大財</marquee></p>
<p><marquee direction="right">發大財</marquee></p><h1>期中報告</h1>
<p><br/><br/><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/LaKbl2PeuR4" width="560"></iframe></p>
<h1>ROC Flag</h1>
<!-- 導入 Brython 標準程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<p></p>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
</script>
<p><canvas height="400" id="plotarea" width="600"></canvas></p>
<script type="text/python">
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(255, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
</script>
<p><canvas height="400" id="plotarea2" width="600"></canvas></p>
<script type="text/python">
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea2"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/2
circle_y = flag_h/2
# 先畫滿地紅
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
</script>
<p><br/><a href="https://colorlib.com" target="_blank"></a> <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. --></p>
<div class="container">
<div class="row pt-3 mx-auto"></div>
</div>
<!-- for footer -->
<p></p>
<!-- for site wrap -->
<p></p>
<!-- <script src="/static/chimper/js/jquery-3.3.1.min.js"></script> -->
<script src="/static/chimper/js/jquery-migrate-3.0.1.min.js"></script>
<script src="/static/chimper/js/jquery-ui.js"></script>
<script src="/static/chimper/js/popper.min.js"></script>
<script src="/static/chimper/js/bootstrap.min.js"></script>
<script src="/static/chimper/js/owl.carousel.min.js"></script>
<script src="/static/chimper/js/jquery.stellar.min.js"></script>
<script src="/static/chimper/js/jquery.countdown.min.js"></script>
<script src="/static/chimper/js/jquery.magnific-popup.min.js"></script>
<script src="/static/chimper/js/bootstrap-datepicker.min.js"></script>
<script src="/static/chimper/js/aos.js"></script>
<!--
            <script src="/static/chimper/js/typed.js"></script>
                    <script>
                    var typed = new Typed('.typed-words', {
                    strings: ["Web Apps"," WordPress"," Mobile Apps"],
                    typeSpeed: 80,
                    backSpeed: 80,
                    backDelay: 4000,
                    startDelay: 1000,
                    loop: true,
                    showCursor: true
                    });
                    </script>
            -->
<script src="/static/chimper/js/main.js"></script><h1>3D圖</h1>
<script src="/static/three.min.js"></script>
<p><iframe height="900" src="/static/viewstl.html?src=/downloads/發大財.stl" width="900"><iframe></iframe></iframe></p>
<script src="/static/three.min.js"></script>
<p><iframe height="900" src="/static/viewstl.html?src=/downloads/output.stl" width="900"><iframe></iframe></iframe></p><h1>繪圖</h1>
<p>1.Brython繪圖</p>
<p>2.Canvas 繪圖</p><h2>Brython繪圖</h2>
<!-- 導入 Brython 標準程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<p></p>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
</script>
<p><canvas height="600" id="onegear" width="800"></canvas></p>
<!-- 以下製作 button-->
<div height="20" id="onegear_div" width="800"></div>
<p><input id="n" type="text" value="22"/><br/> <button id="button">Set Number of Gears</button></p>
<!-- 以下實際利用  Brython 繪圖-->
<script type="text/python3">
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx
 
    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
 
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd>rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd>rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd>rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
 
# 以 button 驅動的事件函式
def setgearnumber(e):
    ctx.clearRect(0, 0, canvas.width, canvas.height)
    x = (canvas.width)/2
    y = (canvas.height)/2
    if doc["n"].value.isdigit():
        n1 = int(doc["n"].value)
    else:
        n1= 25
    # 設定齒輪參數
    x = (canvas.width)/2
    y = (canvas.height)/2
    r = 0.6*(canvas.height/2)
    pa = 20
    # 繪出齒輪
    Spur(ctx).Gear(x, y, r, n1, pa, "blue")
#判定 button
setgearnumber(True)
doc['button'].bind('click',setgearnumber)
</script><h2>Canvas 繪圖</h2>
<p><span>以 Html5 Canvas程式碼繪圖</span></p>
<p><canvas height="300" id="canvas" width="400"> Your browser doesn't support the HTML5 element canvas. </canvas></p>
<script>
canvas = document.getElementById("canvas");
ctx = canvas.getContext('2d');
 
function draw(){
 ctx.beginPath();
 ctx.strokeStyle = "rgb(200,0,0)";
 ctx.arc(200, 200,50,0,2*Math.PI, false);
 ctx.closePath();
 ctx.stroke();
}
 
function clear_canvas(){
// Store the current transformation matrix
// The save() method pushes the current state onto the stack..
ctx.save();
 
// Use the identity matrix while clearing the canvas
// the setTransform() method lets you scale, rotate, move, and skew the current context.
// setTransform(Horizontal scaling, Horizontal skewing,Vertical skewing, Vertical scaling, Horizontal moving, Vertical moving)
ctx.setTransform(1, 0, 0, 1, 0, 0);
ctx.clearRect(0, 0, canvas.width, canvas.height);
// Restore the transform
// The restore() method pops the top state on the stack, restoring the context to that state.
ctx.restore();
}
</script>
<p><button onclick="draw()">繪圖</button> <button onclick="clear_canvas()">清除</button></p><h1>Ball</h1>
<script>
class Ball {
	constructor(radius, color) {
		this.radius = radius;
		this.color = color;
		this.isMoving = true;
		this.x = 0;
		this.y = 0;
		this.vx = 0;
		this.vy = 0;
		this.mass = 1;
		this.drag = 0.995;
		this.bounceFactor = 0.8;
		this.init();
	}
	init() {
		
		/*graphics.beginFill(color);
		graphics.drawCircle(0, 0, radius);
		graphics.endFill();*/
	}
	draw(ctx) {
		ctx.beginPath();
		ctx.strokeStyle = this.color;
		ctx.fillStyle = this.color;
		ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);
		ctx.stroke();
		ctx.fill();
		ctx.closePath();
	}
} // ends class

var fpsCounter = function() {
	var fps = 60,
		framesThisSecond = 0,
		lastFpsUpdate = 0,
		fpsDecay = 0.25,
		fpsUpdateTime = 1000;
	var fpsDisplay = document.createElement('div');
	fpsDisplay.style.cssText = 'position:fixed;left:0;top:0;opacity:0.7;z-index:9999;font-family:sans-serif;font-size:16px;font-weight:bold;color:#00F;';
	fpsDisplay.appendChild(document.createTextNode(" FPS"));
	document.body.appendChild(fpsDisplay);
	this.update = function(timestamp) {
		if (typeof timestamp === 'undefined') { timestamp = performance.now() }; //if no timestamp is given, default to performance.now()
		if (timestamp > lastFpsUpdate + fpsUpdateTime) { //update every fpsUpdateTime
			fps = fpsDecay * framesThisSecond + (1 - fpsDecay) * fps; //compute the new FPS
			lastFpsUpdate = timestamp;
			framesThisSecond = 0;
			fpsDisplay.textContent = Math.round(fps) + " FPS";
		}
		framesThisSecond++;
	}
}

const maxFPS = 60;
const timestep = 1000/maxFPS;
const allowedTimeStepVariance = 1;
let lastUpdateTime = 0;
let delta = 1;
let running = false,
    started = false,
    currentRAF = 0;

var canvas, ctx;
var canvasWidth, canvasHeight;
var boundaryLeft, boundaryRight, boundaryTop, boundaryBottom;

let gravity = 0.001;
let balls = [];
let mouseTouchObj = {
	oldX : 0,
	oldY : 0,
	x : 0,
	y : 0,
	heldObj : null,
	
}
let heldObj;

document.addEventListener('DOMContentLoaded', function() {
	//initialize stage and tools
	canvas = document.querySelector("#myCanvas");
	ctx = canvas.getContext("2d");
	canvasWidth = canvas.width;
	canvasHeight = canvas.height;
	boundaryLeft = 0;
	boundaryRight = canvas.width;
	boundaryTop = 0;
	boundaryBottom = canvas.height;
	
	myFPSCounter = new fpsCounter(); //fps-counter.js
	
	canvas.addEventListener("mousemove", function (e) {
		var mousePos = getInputPosition(e.target, e);
		var message = 'Mouse position: ' + mousePos.x + ',' + mousePos.y;
		var msgTarget = document.querySelector("#desc-one");
		msgTarget.innerHTML = message;
		mouseTouchInput('move', e)
	}, false);
	canvas.addEventListener("mousedown", function (e) {
		mouseTouchInput('down', e)
	}, false);
	window.addEventListener("mouseup", function (e) {
		mouseTouchInput('up', e)
	}, false);
	canvas.addEventListener("mouseout", function (e) {
		mouseTouchInput('out', e)
	}, false);
	canvas.addEventListener("touchstart", function (e) {
		mouseTouchInput('down', e)
	}, false);
	canvas.addEventListener("touchmove", function (e) {
        e.preventDefault();
		mouseTouchInput('move', e)
	}, false);
	window.addEventListener("touchend", function (e) {
        e.preventDefault();
		mouseTouchInput('up', e)
	}, false);
	window.addEventListener("touchcancel", function (e) {
        e.preventDefault();
		mouseTouchInput('up', e)
	}, false);
	
	init();
});

function init() {
	//initialize stage objects
	balls.push(new Ball(20, "#FF0000"));
	balls[0].x = 250;
	balls[0].y = 100;
	balls[0].vx = 0;
	balls[0].vy = 0;
	//updateObjects(timestep);
	//drawObjects(ctx, balls);
	start();
}

function start() {
	if (!started) {
        started = true;
        currentRAF = requestAnimationFrame(function(timestamp) {
            //updateObjects();
            running = true;
            //lastUpdateTime = timestamp;
            //lastFpsUpdate = timestamp;
            //framesThisSecond = 0;
            currentRAF = requestAnimationFrame(mainLoop);
        });
    }
}
function stop() {
    running = false;
    started = false;
    cancelAnimationFrame(currentRAF);	
}
function panic() {
    delta = 0;
}
function mainLoop(timestamp) {
    currentRAF = requestAnimationFrame(mainLoop);
	//fixed delta/timestep, multiple updates per frame===============================================================================
	//console.log (timestamp, lastUpdateTime + (1000 / maxFPS), timestamp < lastUpdateTime + (1000 / maxFPS), (timestamp < lastUpdateTime + (1000 / maxFPS) - allowedTimeStepVariance))
	if (timestamp < lastUpdateTime + (1000 / maxFPS) - allowedTimeStepVariance) { // Throttle the frame rate
		//If the timestamp is only a little more than the next ideal frame, we would have to wait another cycle for the next update.
		//I find that introducing 'allowedTimeStepVariance' will give some allowance and reduce frame skips.
		//This should reduce the need to update multiple times per frame and give us smoother animations.
		//After implementing this, it is easier to reach the desired FPS limit.
        return; //stop here and wait for the next cycle
    }
	myFPSCounter.update(timestamp); //fps-counter.js
	delta += timestamp - lastUpdateTime;
    lastUpdateTime = timestamp;
    var numUpdateSteps = 0;
    while (delta >= timestep) { //run update multiple times per update, to prevent sudden jumps over obstables
        updateObjects(timestep); //with the multiple updates per frame method, we use a fixed delta(timestep)
        delta -= timestep;
        if (++numUpdateSteps >= 240) { //too many updates in a frame
            panic();
            break;
        }
    }
	drawObjects(ctx, balls); //draw only when updates have caught up
	//fixed delta/timestep, multiple updates per frame===============================================================================
	
	/*
	//dynamic delta/timestep, single updates per frame===============================================================================
	delta = timestamp - lastUpdateTime;
	//console.log("delta", delta)
    if (delta > timestep) { // Throttle the frame rate
		myFPSCounter.update(timestamp); //fps-counter.js
        updateObjects(delta);
		drawObjects(ctx, balls);
        lastUpdateTime = timestamp - (delta % timestep); //adjust lastUpdateTime time
    }
	//dynamic delta/timestep, single updates per frame===============================================================================
	*/
}
function updateObjects(updateDelta) {
	moveObjects(updateDelta, balls);
}
function moveObjects(updateDelta, objArr) {
	for (i = 0; i < objArr.length; i++) {
		if (objArr[i].isMoving) {
			objArr[i].vy += gravity * updateDelta; //do we apply delta to gravity? or acceleration in general?
			objArr[i].vx *= objArr[i].drag;
			objArr[i].vy *= objArr[i].drag;
			objArr[i].x += objArr[i].vx * updateDelta;
			objArr[i].y += objArr[i].vy * updateDelta;
			
			if (objArr[i].x + objArr[i].radius > boundaryRight) {
				objArr[i].x = boundaryRight - objArr[i].radius;
				objArr[i].vx = -objArr[i].vx * objArr[i].bounceFactor;
			} else if (objArr[i].x - objArr[i].radius < boundaryLeft) {
				objArr[i].x = boundaryLeft + objArr[i].radius;
				objArr[i].vx = -objArr[i].vx * objArr[i].bounceFactor;
			}
			if (objArr[i].y + objArr[i].radius > boundaryBottom) {
				objArr[i].y = boundaryBottom - objArr[i].radius;
				objArr[i].vy = -objArr[i].vy * objArr[i].bounceFactor;
			} else if (objArr[i].y - objArr[i].radius < boundaryTop) {
				objArr[i].y = boundaryTop + objArr[i].radius;
				objArr[i].vy = -objArr[i].vy * objArr[i].bounceFactor;
			}
		}
	}
	if (mouseTouchObj.heldObj) {
		mouseTouchObj.heldObj.vx = (mouseTouchObj.heldObj.x - mouseTouchObj.oldX) / updateDelta;
		mouseTouchObj.heldObj.vy = (mouseTouchObj.heldObj.y - mouseTouchObj.oldY) / updateDelta;
		mouseTouchObj.oldX = mouseTouchObj.heldObj.x;
		mouseTouchObj.oldY = mouseTouchObj.heldObj.y;
	}
}
function clearObjects(ctx, objArr) {
	ctx.clearRect(0, 0, canvasWidth, canvasHeight); //clear everything
	//or clear objects only, useful when performance is an issue
}
function drawObjects(ctx, objArr) {
	clearObjects(ctx, objArr);
	for (i = 0; i < objArr.length; i++) {
		objArr[i].draw(ctx);
	}	
}

function mouseTouchInput(type, e) {
	var inputPos = getInputPosition(canvas, e);
	if (type == 'down') {
		//simple hit detection for this test
		for (i = 0; i < balls.length; i++) {
			if ((inputPos.x >= balls[i].x - balls[i].radius && inputPos.x <= balls[i].x + balls[i].radius) && (inputPos.y >= balls[i].y - balls[i].radius && inputPos.y <= balls[i].y + balls[i].radius)) {
				balls[i].isMoving = false;
				mouseTouchObj.heldObj = balls[i];
				mouseTouchObj.oldX = mouseTouchObj.heldObj.x;
				mouseTouchObj.oldY = mouseTouchObj.heldObj.y;
			}
		}
	}
	if (type == 'up' || type == "out") {
		if (mouseTouchObj.heldObj) {
			mouseTouchObj.heldObj.isMoving = true;
			mouseTouchObj.heldObj = null;
		}
	}
	if (type == 'move') {
		if (mouseTouchObj.heldObj) {
			mouseTouchObj.heldObj.x = inputPos.x;
			mouseTouchObj.heldObj.y = inputPos.y;
		}
	}
}

function getInputPosition(targetCanvas, e) {
	var rect = targetCanvas.getBoundingClientRect();
    var position = {x: null, y: null};
    //if (Modernizr.touch) { //global variable detecting touch support
	if (e.touches && e.touches.length > 0) {
		position.x = e.touches[0].clientX - rect.left;
		position.y = e.touches[0].clientY - rect.top;
	} else {
		position.x = e.clientX - rect.left;
		position.y = e.clientY - rect.top;
	}
    return position;
}
//============================================Compatibility===================================================
var requestAnimationFrame = typeof requestAnimationFrame === 'function' ? requestAnimationFrame : (function() {
	var lastTimestamp = Date.now(),
		now,
		timeout;
	return function(callback) {
		now = Date.now();
		timeout = Math.max(0, timestep - (now - lastTimestamp));
		lastTimestamp = now + timeout;
		return setTimeout(function() {
			callback(now + timeout);
		}, timeout);
	};
})(),

cancelAnimationFrame = typeof cancelAnimationFrame === 'function' ? cancelAnimationFrame : clearTimeout;
//============================================Compatibility===================================================

document.addEventListener('DOMContentLoaded', function() { 
				document.querySelector("#stop-btn").addEventListener("click", function (e) {
					stop();
				});
			});
</script>
<div id="centered">
<div id="main">
<div id="board-holder">
<div id="board" tabindex="0"><canvas height="357" id="myCanvas" width="599"></canvas></div>
</div>
<div><button id="stop-btn">stop</button></div>
<div>
<p class="desc" id="desc-one">test 1</p>
<p class="desc" id="desc-two">test 2</p>
</div>
</div>
</div>
<p><br/><br/></p>
<!-- footer -->
<div class="container">
<div class="row pt-3 mx-auto">
<p><br/><!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. --></p>
</div>
</div>
<!-- for footer -->
<p></p>
<!-- for site wrap -->
<p></p>
<!-- <script src="../cmsimde/static/chimper/js/jquery-3.3.1.min.js"></script> -->
<script src="/get_page/cmsimde/static/chimper/js/jquery-migrate-3.0.1.min.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/jquery-ui.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/popper.min.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/bootstrap.min.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/owl.carousel.min.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/jquery.stellar.min.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/jquery.countdown.min.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/jquery.magnific-popup.min.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/bootstrap-datepicker.min.js"></script>
<script src="/get_page/cmsimde/static/chimper/js/aos.js"></script>
<!--
            <script src="../cmsimde/static/chimper/js/typed.js"></script>
                    <script>
                    var typed = new Typed('.typed-words', {
                    strings: ["Web Apps"," WordPress"," Mobile Apps"],
                    typeSpeed: 80,
                    backSpeed: 80,
                    backDelay: 4000,
                    startDelay: 1000,
                    loop: true,
                    showCursor: true
                    });
                    </script>
            -->
<script src="/get_page/cmsimde/static/chimper/js/main.js"></script><h1>用Ubuntu開啟網站</h1>
<p><span color="#FF0000" style="color: #ff0000;">啟動，並輸入ifconfig查詢虛擬主機IP位址</span></p>
<p><img alt="" height="450" src="/images/1.png" width="502"/></p>
<p><span color="blue" style="color: blue;">打開<span>FileZilla，把倉儲檔案複製到虛擬主機資料夾</span></span></p>
<p><span><img alt="" height="386" src="/images/4.png" width="510"/></span></p>
<p><span color="green" style="color: green;">再修改init.py，把檔案裡的False改True，再傳送覆蓋本地檔案</span></p>
<p><img caption="false" height="300" src="/images/2.png" width="586"/></p>
<p><span style="color: orange;">或是直接在虛擬主機內修改，先輸入cd /home/kmol2019/cms，再輸入vi init.py進到編輯頁面，可能會出現E325: ATTENTION，輸入o或enter，按i進行編輯，把Flase改成true，按Esc退出編輯模式，輸入:wq !存檔。</span></p>
<p><img alt="" height="394" src="/images/6.png" width="440"/></p>
<p><span color="#FF0000" style="color: purple;">到瀏覽器輸入網址，有以下三種</span></p>
<p><span color="#FF0000" style="color: red;">http://虛擬主機IP，即可進到個人靜態網站</span></p>
<p><span color="#FF0000" style="color: red;"><img alt="" height="350" src="/images/靜.png" width="658"/></span></p>
<p><span color="#FF0000" style="color: #ff0000;">https://虛擬主機IP，即可進到個人動態網站</span></p>
<p><span color="#FF0000" style="color: #ff0000;"><img caption="false" height="350" src="/images/動.png" width="659"/></span></p>
<p><span color="#FF0000" style="color: #ff0000;">https://虛擬主機IP:5443，即可進入Fossil網站</span></p>
<p><span color="#FF0000" style="color: #ff0000;"><img caption="false" height="350" src="/images/fossil.png" width="659"/></span></p>